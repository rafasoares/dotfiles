export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

{{ if eq .chezmoi.os "darwin" -}}
eval $(brew shellenv)
export HOMEBREW_NO_ENV_HINTS=1
{{- end }}

ZINIT_HOME={{ joinPath .chezmoi.homeDir ".local/share/zinit" }}
source "${ZINIT_HOME}/zinit.zsh"

if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
  eval "$(oh-my-posh init zsh --config "$(brew --prefix oh-my-posh)/themes/hotstick.minimal.omp.json")"
fi

# Load custom zsh functions
source $HOME/.config/zsh/functions.zsh

# Load oh-my-zsh plugins
zi ice as'completion'; zi snippet OMZP::docker/completions/_docker

zinit snippet OMZP::aliases
zinit snippet OMZP::bundler
zinit snippet OMZP::common-aliases
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::docker-compose
zinit snippet OMZP::git
zinit snippet OMZP::rails

# Load zinit plugins
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
zinit light ntnyq/omz-plugin-pnpm

if [ "$(command -v brew)" ]; then
  zinit snippet OMZP::brew
fi

# Load custom zsh aliases
source $HOME/.config/zsh/aliases.zsh

# Load completions
remove_conflicting_git_completions
fpath=("$(brew --prefix)/share/zsh/site-functions" $fpath)
zicompinit

# Bind history search to up and down arrow keys
bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward

# Configure history
HISTFILE=$HOME/.config/zsh/.zsh_history
HISTSIZE=10000
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_find_no_dups
setopt hist_ignore_space

# Configure corrections
unsetopt correct_all
setopt correct
unsetopt nomatch

# Configure completion
COMPLETION_WAITING_DOTS="true"
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'
# Match lower case characters to upper case. Eg. `foo` will also match `Foo` and `FOO``
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}'

if [ "$(command -v eza)" ]; then
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --icons --group-directories-first --git --color=always $realpath'
zstyle ':fzf-tab:complete:z:*' fzf-preview 'eza -1 --icons --group-directories-first --git --color=always $realpath'
fi

zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# Load external utilities
[ $(command -v chezmoi) ] && eval "$(chezmoi completion zsh)"
[ "$(command -v fzf)" ] && eval "$(fzf --zsh)"
[ "$(command -v zoxide)" ] && eval "$(zoxide init --cmd cd zsh)"
[ "$(command -v fnm)" ] && eval "$(fnm env --use-on-cd)"
[ "$(command -v scloud)" ] && eval "$(scloud --shell zsh)"

# Set the editor
if [ "$(command -v code)" ]; then
  export EDITOR="code -w"
elif [ "$(command -v nvim)" ]; then
  export EDITOR="nvim"
else
  export EDITOR="vim"
fi

{{ if eq .chezmoi.os "linux" }}
# Configure Homebrew on Linux, if available
if [ -d /home/linuxbrew/.linuxbrew ]; then
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi
{{ end }}

# replay completions
zicdreplay
